version: '3.8'
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: morerao/vollo-backend:${BACKEND_TAG:-latest}
    ports:
      - "8128:3000"  # Ajustei para corresponder Ã  URL de ambiente
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-vollo_db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASS=${DB_PASS}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - vollo_network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    image: morerao/vollo-frontend:${FRONTEND_TAG:-latest}
    ports:
      - "8129:3001"  # Ajustei a porta
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:8128
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - vollo_network

  database:
    image: postgres:13
    ports:
      - "8130:5432"
    environment:
      - POSTGRES_DB=${DB_NAME:-vollo_db}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - vollo_network

  sonarqube:
    image: sonarqube:community
    ports:
      - "8133:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - vollo_network

networks:
  vollo_network:
    driver: bridge

volumes:
  postgres_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
